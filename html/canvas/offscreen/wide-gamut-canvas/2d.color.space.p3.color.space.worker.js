// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.color.space.p3.color.space
// Description:
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

var offscreenCanvas = new OffscreenCanvas(100, 50);
var ctx = offscreenCanvas.getContext('2d', {colorSpace: "display-p3", pixelFormat: "uint8"});

var color_style = 'rgb(50, 100, 150)';
var color_p3_f32 = [0.24304, 0.38818, 0.57227, 1.0];
var epsilon =  2;
ctx.fillStyle = color_style;
ctx.fillRect(0, 0, 10, 10);

var pixel = ctx.getImageData(5, 5, 1, 1, {colorSpace: "display-p3", storageFormat: "uint8"}).data;
var pixel_expected  = color_p3_f32;
pixel_expected = [pixel_expected[0] * 255,
                  pixel_expected[1] * 255,
                  pixel_expected[2] * 255,
                  pixel_expected[3] * 255];
var passed = true;
_assertSame(pixel.length, pixel_expected.length, "pixel.length", "pixel_expected.length");
for (var i = 0; i < pixel.length; i++)
{
  if (Math.abs(pixel[i] - pixel_expected[i]) > epsilon) {
    passed = false;
  }
}
_assertSame(passed, true, "passed", "true");
t.done();

});
done();
